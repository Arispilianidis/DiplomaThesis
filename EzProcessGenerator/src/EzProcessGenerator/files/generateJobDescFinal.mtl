[comment encoding = UTF-8 /]
[module generateJobDescFinal('http://www.example.org/ezProcess')]


[template public generateJobDescFinal(aJobDescriptionTemplate : JobDescription)]

[file ('Output/src/'+aJobDescriptionTemplate.name + '/'+ aJobDescriptionTemplate.name+'Final.js', false, 'UTF-8')]
import React from 'react'
import { useLocation } from 'react-router';
import { useNavigate } from 'react-router-dom';
import axios from 'axios';

function [aJobDescriptionTemplate.name/]Final() {

    const navigate = useNavigate();
    let { state } = useLocation();
    const formData = state['[0]'/]
    const serverUserInfo = state['[1]'/]
    const processName = state['[2]'/]

    function isValidDate(date) {
        return date && Object.prototype.toString.call(date) === "['[object Date]'/]" && !isNaN(date);
    }


    function printItem(Item) {

        if (typeof (Item) === 'object') {

            if (isValidDate(Item)) {
                return Item.toLocaleDateString('en-GB')
            }
            else {

                return Item.map((element) => {
                    return <p key={element} style={{ textAlign: 'left' }}>- {element}</p>
                });
            }
        }
        else {
            return <p key={Item} style={{ textAlign: 'left' }}> {Item}</p>
        }

    }


    //Update user's info since he completed the process
    function completeTask() {


        axios.post("http://localhost:3000/JobDescTemp", {formData, processName}, {
            headers: {
                'Access-Control-Allow-Origin': '*',
                'Content-Type': 'application/json',
            }
        })
            .then(response => {
                console.log(response)
                
            })
            .catch(error => console.log("Error at complete Task => " + error.message))

        navigate("/Processes", { state: ['[serverUserInfo]'/] });

    }

    return (
        <div style={{ width: "50%", margin: "auto", maxWidth: 650, minWidth: 500 }}>
            <h1>Job Description Overview</h1><br />
            <hr></hr><br />

            <div style={{ backgroundColor: 'white', wordWrap: 'break-word' }}>
              
			[for (page : Page | hasPage )]
				[for (value : InitialValue | hasInitialvalue)]
 			<h4> [value.label/]:</h4> <div>{printItem(formData.[value.name/])}</div>  <br />
 				[/for]
			[/for]

            </div>

            <button className="btn_complete" onClick={completeTask}>Complete Task</button>


        </div>
    )
}


export default [aJobDescriptionTemplate.name/]Final

[/file]
[/template]
